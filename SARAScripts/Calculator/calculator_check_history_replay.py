# coding=utf8

import os
import sys
import time
import json
import frida
import argparse
import traceback
import uiautomator2 as u2
sys.path.append(os.path.abspath(os.getcwd()))
sys.path.append(os.path.abspath(os.getcwd()))
from script import util

frida_session = None
xml = None
view_hierarchy = None
save_path = None
action_count = 0
current_popup_window = None
curr_webview_address = None

d = u2.connect()
print(d.info)


def log(desc):
    global action_count
    print('[ReplayAction]-%d: ' % action_count, desc)


def error_handler(func):
    def wrapper(message, data):
        if message['type'] == 'error':
            print('[Func]: %s, [Error-msg]: %s' % (func.__name__, message))
            print('[Func]: %s, [Error-des]: %s' % (func.__name__, message['description']))
            print('[Func]: %s, [Error-sta]: %s' % (func.__name__, message['stack']))
            print('[Func]: %s, [Error-dat]: %s' % (func.__name__, data))
            return None
        else:
            return func(message, data)
    return wrapper


def preprocess_path():
    global save_path
    if save_path is None:
        return False
    if not os.path.exists(save_path):
        os.mkdir(save_path)
    else:
        for file in os.listdir(save_path):
            os.remove(os.path.join(save_path, file))
    return True


def post_action(custom_interval):
    global xml
    global d
    global action_count
    global save_path
    global view_hierarchy

    print('[ReplayTimeInterval]-%d: %s' % (action_count, json.dumps({'interval': custom_interval})))
    if action_count > 0:
        # time.sleep(1)
        if custom_interval > 0:
            time.sleep(custom_interval)
    xml = d.dump_hierarchy()
    xml = util.parse_xml(xml)
    screenshot_filename = os.path.join(save_path, '_'.join(['screenshot', str(action_count)]) + '.jpg')
    xml_filename = os.path.join(save_path, '_'.join(['ui', str(action_count)]) + '.xml')
    view_hierarchy_filename = os.path.join(save_path, '_'.join(['view_hierarchy', str(action_count)]) + '.xml')
    d.screenshot(screenshot_filename)
    util.save_xml(xml, xml_filename)
    view_hierarchy, lxml_view_hierarchy = util.dump_view_hierarchy(d, view_hierarchy_filename)
    action_count += 1


def set_text(rid, bounds, text):
    global xml
    view = util.find_view(rid, bounds, xml)
    if view is None:
        print('TextView ' + rid + ' does not exist')
    else:
        if len(rid) > 0:
            d(resourceId=rid, focused=True).set_text(text)
        else:
            d(focused=True).set_text(text)
        log('[set_text]-%s' % json.dumps({'rid': rid, 'text': text, 'bounds': bounds}))


def press_soft_keyboard(key_name):
    global xml
    index = util.find_soft_key(key_name, xml)
    if index is None:
        raise Exception('Key ' + key_name + ' does not exist')
    key_x, key_y = index[0], index[1]
    d.click(key_x, key_y)
    log('[press_key]-%s' % json.dumps({'key_name': key_name}))


def hide_soft_keyboard():
    global xml
    if util.check_soft_keyboard(xml):
        print('Hide soft keyboard')
        d.press('back')
        log('[hide_keyboard]')


def record_popup_window():
    global current_popup_window
    current_popup_window = util.get_current_window(d)
    log('[record_popup_window]-%s' % json.dumps({'window': current_popup_window}))


def close_popup_window():
    global current_popup_window
    if current_popup_window is not None:
        window = util.get_current_window(d)
        if window == current_popup_window:
            d.press('back')
            log('[hide_popup_window]-%s' % json.dumps({'window': current_popup_window}))
            current_popup_window = None


def clean_up():
    global frida_session
    print('Clean Up....')
    frida_session.detach()


def detect_webview():
    # Get WebView handle
    global frida_session
    instrument_script = frida_session.create_script(util.instrument_WebView())
    instrument_script.on('message', get_instrument_WebView_message)
    instrument_script.load()


@error_handler
def get_instrument_WebView_message(message, data):
    global curr_webview_address
    print('[WebView]: ', message)
    curr_webview_address = util.get_view_address(message['payload']['webview'])


def perform_click_event(tap_type, x, y, duration, view_type):
    global action_count
    global view_hierarchy
    global frida_session

    if view_type == 'Activity':
        candidates = util.find_component_candidates(view_hierarchy, x, y)
        # Instrument
        instrument_script = None
        code = util.instrument_view([candidate['classname'] for candidate in candidates], [candidate['address'] for candidate in candidates], action_count)
        instrument_script = frida_session.create_script(code)
        instrument_script.on('message', get_instrument_view_message)
        instrument_script.load()
        if tap_type == 'LongTap':
            d.long_click(x, y, duration)
        elif tap_type == 'Tap':
            d.long_click(x, y, duration)
        elif tap_type == 'DoubleTap':
            d.double_click(x, y, 0.1)

        # time.sleep(1)
        instrument_script.unload()
        log('[click]-%s' % json.dumps({'tap_type': tap_type, 'x': x, 'y': y, 'duration': duration, 'candidate': candidates, 'view_type': view_type}))

    else:
        # Dialog & PopupWindow
        # command `adb shell dumpsys activity top` fails to extract view hierarchy of Dialog & PopupWindow
        if tap_type == 'LongTap':
            d.long_click(x, y, duration)
        elif tap_type == 'Tap':
            d.long_click(x, y, duration)
        elif tap_type == 'DoubleTap':
            d.double_click(x, y, 0.1)
        log('[click]-%s' % json.dumps({'tap_type': tap_type, 'x': x, 'y': y, 'duration': duration, 'view_type': view_type}))


@error_handler
def get_instrument_view_message(message, data):
    print('[ReplayViewInstrumentation]: %s' % json.dumps(message))


def perform_swipe_event(pointers, duration=0.01):
    d.swipe_points(pointers, duration)
    log('[swipe]-%s' % json.dumps({'pointers': pointers, 'duration': duration}))


def perform_key_event(key_code):
    d.press(key_code)
    log('[press]-%s' % json.dumps({'key_code': key_code}))


def webview_set_text(input_selector, text, webview_classname, package_name):
    # Set Text
    global curr_webview_address
    code = util.webview_set_text(input_selector, text, webview_classname, curr_webview_address, package_name)
    instrument_script = frida_session.create_script(code)
    instrument_script.on('message', get_webview_set_text_message)
    instrument_script.load()


def webview_set_text_with_u2(text):
    d(focused=True).set_text(text)
    log('[webview_set_text]-%s' % json.dumps({'text': text}))


@error_handler
def get_webview_set_text_message(message, data):
    print('[WebViewSetText]: ', message)


def instrument_chrome_client():
    code = util.instrument_chrome_client()
    script = frida_session.create_script(code)
    script.on('message', get_instrument_chrome_client_message)
    script.load()


@error_handler
def get_instrument_chrome_client_message(message, data):
    print('[Console]: ', message)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Argument Parser')
    parser.add_argument('--path', help='save path', required=True)
    parser.add_argument('--package', help='package name', required=True)
    parser.add_argument('--pid', help='pid name', required=True)
    args = parser.parse_args()
    
    save_path = args.path
    package_name = args.package
    pid = int(args.pid)

    if not preprocess_path():
        print('Save path not found')
        sys.exit()

    # Setup Dynamic instrument   
    all_devices = frida.enumerate_devices()
    device = frida.get_usb_device()

    # Attach
    frida_session = device.attach(pid)
    print(frida_session)

    try:
        detect_webview()
        # instrument_chrome_client()
        post_action(0)

        perform_click_event("Tap", 689.043030, 123.903198, 0.180000, "Activity")
        post_action(0.617298)
        record_popup_window()
        post_action(4.435603)
        perform_click_event("Tap", 484.327332, 125.901642, 0.183000, "None")
        post_action(0.081008)
        close_popup_window()
        post_action(4.208146)
        perform_swipe_event([(466.352294921875, 340.7337951660156), (465.7273864746094, 356.99188232421875), (463.0854187011719, 388.2323913574219), (460.41790771484375, 413.103515625), (454.715576171875, 438.530029296875), (438.5313415527344, 523.5584716796875), (431.4654846191406, 567.15771484375), (419.97418212890625, 639.7323608398438), (415.26605224609375, 677.728271484375), (403.1014709472656, 776.2158203125), (397.9771423339844, 822.52880859375), (393.52734375, 859.0218505859375), (387.71258544921875, 917.1448974609375), (385.1883850097656, 949.8539428710938), (380.4856872558594, 1009.5487060546875), (375.5683898925781, 1060.601318359375), (372.36273193359375, 1093.82666015625), (369.4868469238281, 1124.0001220703125), (368.75579833984375, 1132.971435546875), (367.1994323730469, 1147.2659912109375), (367.4895935058594, 1150.4605712890625), (366.4909973144531, 1154.0648193359375), (366.4909973144531, 1154.5980224609375), (366.4909973144531, 1155.0975341796875)])
        post_action(0.377192)
        perform_swipe_event([(515.2843627929688, 303.7626953125), (510.6108093261719, 343.01214599609375), (504.45269775390625, 390.6217346191406), (478.22064208984375, 533.2698974609375), (454.30517578125, 637.8209838867188), (437.53094482421875, 733.549072265625), (430.2539367675781, 821.7338256835938), (428.4049987792969, 855.9965209960938), (427.6495056152344, 869.912353515625), (423.7589111328125, 911.8341674804688), (422.9949035644531, 928.9556274414062), (420.59112548828125, 966.615966796875), (420.4161071777344, 983.3480834960938), (418.0994567871094, 1009.050048828125), (415.92230224609375, 1039.687744140625), (414.5928955078125, 1053.48974609375), (414.4244079589844, 1070.9288330078125), (413.77203369140625, 1078.11767578125), (413.4258117675781, 1085.697021484375), (413.4258117675781, 1098.5301513671875), (413.4258117675781, 1109.351806640625), (412.42718505859375, 1120.6123046875), (412.42718505859375, 1129.4473876953125), (412.42718505859375, 1131.7938232421875), (412.42718505859375, 1132.115478515625)])
        post_action(1.026295)
        perform_swipe_event([(635.117919921875, 636.5027465820312), (588.682373046875, 638.0015869140625), (584.8435668945312, 639.1425170898438), (568.9761962890625, 642.0907592773438), (552.998291015625, 643.6832275390625), (538.07470703125, 646.1380004882812), (529.5202026367188, 646.7691650390625), (513.2108154296875, 649.83837890625), (499.71881103515625, 653.1044311523438), (487.6277770996094, 656.1611328125), (473.7942199707031, 659.9066162109375), (457.602783203125, 665.400634765625), (446.87933349609375, 666.4793701171875), (437.1731262207031, 670.43359375), (426.56536865234375, 673.4344482421875), (418.5043029785156, 676.8630981445312), (410.48797607421875, 679.8221435546875), (401.3183898925781, 682.3594970703125), (395.32525634765625, 685.8394165039062), (389.0556335449219, 687.9305419921875), (383.6498107910156, 689.4157104492188), (378.3097839355469, 690.7515258789062), (376.6668701171875, 693.2684326171875), (374.7718505859375, 693.8118286132812), (375.478515625, 694.2303466796875), (375.478515625, 694.4574584960938)])
        post_action(0.532890)
        perform_swipe_event([(520.2774047851562, 984.2310791015625), (521.4524536132812, 960.71533203125), (525.14697265625, 945.6888427734375), (533.7513427734375, 888.6879272460938), (540.4378051757812, 837.8190307617188), (551.392333984375, 780.662841796875), (561.925537109375, 727.2431640625), (565.007568359375, 700.5042724609375), (572.7559204101562, 662.725341796875), (576.7236938476562, 642.8740844726562), (581.7481689453125, 619.1795043945312), (584.51123046875, 606.2342529296875), (588.0883178710938, 591.012939453125), (589.3541259765625, 585.8516845703125), (593.1761474609375, 577.548828125), (594.5604858398438, 571.3948974609375), (600.6557006835938, 553.26123046875), (602.4445190429688, 545.448974609375), (607.2659912109375, 527.6657104492188), (609.643310546875, 520.3784790039062), (616.0167236328125, 503.57122802734375), (617.9365234375, 497.227294921875), (622.8954467773438, 482.8199462890625), (625.0147094726562, 475.9798278808594), (629.5812377929688, 462.2718811035156), (631.605224609375, 455.2320556640625), (634.8318481445312, 445.7975769042969), (636.102294921875, 442.6825866699219), (638.276123046875, 436.1715393066406), (644.3544311523438, 424.9191589355469), (648.2547607421875, 420.5163879394531), (654.8114624023438, 411.5970764160156), (657.02099609375, 408.2808532714844), (657.6227416992188, 406.6100769042969), (659.1210327148438, 403.6481628417969), (659.0845947265625, 402.64825439453125), (656.588134765625, 402.6853942871094), (656.0888061523438, 402.6853942871094)])
        post_action(0.350912)
        perform_swipe_event([(619.1400756835938, 356.7213134765625), (594.0907592773438, 356.7213134765625), (555.02099609375, 361.27886962890625), (464.1794738769531, 379.06201171875), (408.16534423828125, 390.5617370605469), (370.30584716796875, 398.6211853027344), (330.585693359375, 407.072998046875), (299.8357849121094, 415.002197265625), (267.91400146484375, 425.40374755859375), (252.22630310058594, 429.5313720703125), (220.56423950195312, 436.5138854980469), (200.0240478515625, 441.2832946777344), (188.7308349609375, 442.6541748046875), (180.92575073242188, 443.95697021484375), (172.9061737060547, 444.6526184082031), (166.4878692626953, 445.6518249511719), (164.5236358642578, 446.8987121582031), (161.9357452392578, 446.65106201171875), (160.77670288085938, 447.7701721191406), (159.27877807617188, 447.6502685546875), (158.77947998046875, 447.6502685546875), (160.5391387939453, 448.6495056152344), (166.59564208984375, 447.6934814453125), (184.34548950195312, 446.1401672363281), (208.54168701171875, 443.8969421386719), (245.41819763183594, 441.42022705078125), (290.09710693359375, 437.6580810546875), (323.52557373046875, 434.26373291015625), (375.13916015625, 426.4296875), (422.91265869140625, 422.1701965332031), (461.8499450683594, 420.76556396484375), (480.49212646484375, 420.6713562011719), (506.12548828125, 418.2903747558594), (527.5501098632812, 418.67291259765625), (545.7205200195312, 418.67291259765625), (553.76611328125, 418.67291259765625), (573.6243896484375, 419.672119140625), (600.1664428710938, 419.672119140625), (616.0546264648438, 418.9712219238281), (624.3519287109375, 418.67291259765625), (640.3392944335938, 416.49908447265625), (656.2761840820312, 413.67681884765625), (663.200927734375, 412.6775817871094), (663.5552978515625, 412.6775817871094), (668.8252563476562, 411.6783752441406), (670.120361328125, 411.6783752441406), (670.0693359375, 411.6783752441406), (672.0665893554688, 411.6783752441406), (674.4999389648438, 411.6783752441406), (674.0638427734375, 411.6783752441406), (676.9677734375, 411.6783752441406), (677.0596313476562, 410.6791687011719), (679.056884765625, 410.6791687011719), (681.0540771484375, 410.6791687011719)])
        post_action(0.392912)
        perform_swipe_event([(570.2080688476562, 621.5144653320312), (535.755859375, 617.0179443359375), (498.1415710449219, 626.58984375), (444.8163757324219, 637.3369750976562), (407.1780700683594, 643.6012573242188), (367.72821044921875, 650.440673828125), (332.0981750488281, 657.319091796875), (297.08740234375, 662.482421875), (280.4468078613281, 665.0440673828125), (249.6007080078125, 668.73193359375), (229.68099975585938, 671.9749755859375), (211.81777954101562, 673.3151245117188), (189.29527282714844, 675.9021606445312), (169.95822143554688, 678.6712036132812), (160.34156799316406, 680.3878173828125), (148.35604858398438, 682.5543212890625), (138.84422302246094, 684.119873046875), (136.4026336669922, 684.4652709960938), (133.56761169433594, 685.4644775390625), (133.81414794921875, 686.4636840820312), (133.81414794921875, 684.96484375), (134.5374298095703, 685.4644775390625), (135.85939025878906, 685.4644775390625), (135.98243713378906, 685.4644775390625), (142.49671936035156, 684.4652709960938), (158.9391632080078, 683.466064453125), (174.24945068359375, 683.466064453125), (211.91094970703125, 683.466064453125), (291.7667541503906, 684.4652709960938), (334.06103515625, 683.466064453125), (355.8518981933594, 682.466796875), (394.8226013183594, 682.466796875), (459.8573303222656, 682.466796875), (504.0719909667969, 678.7318725585938), (537.2550048828125, 674.1874389648438), (562.7184448242188, 671.9749755859375), (581.6695556640625, 671.4754028320312), (585.43115234375, 671.4754028320312), (596.6712646484375, 671.4754028320312), (602.6818237304688, 670.772216796875), (615.3224487304688, 670.4761962890625), (620.9127197265625, 670.4761962890625), (624.240478515625, 670.4761962890625), (642.5830078125, 667.5440063476562), (647.8607177734375, 667.478515625), (654.2901611328125, 668.71728515625), (659.0845947265625, 670.975830078125), (662.5883178710938, 672.2290649414062), (667.4031982421875, 672.474609375), (672.4820556640625, 673.473876953125), (678.0582275390625, 674.97265625), (680.2576293945312, 675.2730712890625), (684.22412109375, 676.5586547851562), (686.8949584960938, 676.4714965820312), (689.04296875, 676.4714965820312), (690.8947143554688, 678.3971557617188), (691.0402221679688, 678.469970703125)])
        post_action(0.333584)
        perform_swipe_event([(456.3661804199219, 1091.1475830078125), (458.2604675292969, 1040.321044921875), (464.7712097167969, 981.31640625), (479.62744140625, 907.8466186523438), (501.0859375, 816.2347412109375), (506.33148193359375, 791.0222778320312), (518.2113647460938, 727.4176635742188), (522.1925048828125, 695.1972045898438), (525.2073364257812, 671.95947265625), (532.7600708007812, 619.5159912109375), (537.2537841796875, 596.5339965820312), (540.6011962890625, 571.6573486328125), (546.9508056640625, 525.3268432617188), (549.79931640625, 507.8187561035156), (555.8843994140625, 467.21142578125), (559.3397216796875, 439.2579040527344), (562.0921020507812, 426.302978515625), (564.460693359375, 403.8387451171875), (567.1146850585938, 389.23297119140625), (572.5322265625, 363.515380859375), (575.1061401367188, 349.7496643066406), (580.698486328125, 326.971923828125), (583.150146484375, 314.9533996582031), (587.9862670898438, 294.5584716796875), (591.130615234375, 285.9700012207031), (596.1060180664062, 269.9542236328125), (597.193359375, 265.70123291015625), (599.8031616210938, 260.5240783691406), (603.162353515625, 249.30523681640625), (603.9702758789062, 245.38096618652344), (605.2884521484375, 242.5521697998047), (606.3893432617188, 238.35073852539062), (607.15673828125, 237.20533752441406), (607.15673828125, 236.8149871826172)])
        post_action(0.433142)
        perform_swipe_event([(495.31207275390625, 1014.2076416015625), (489.3204040527344, 988.7276000976562), (486.9862060546875, 948.203857421875), (486.3245544433594, 906.100341796875), (488.4481201171875, 825.67333984375), (492.7242736816406, 776.0211181640625), (496.0798645019531, 713.2969970703125), (541.248291015625, 371.7095947265625), (542.2468872070312, 369.23651123046875), (542.9630737304688, 366.27947998046875), (546.2393798828125, 359.724853515625), (546.2413330078125, 358.3843994140625), (548.6378173828125, 352.92474365234375), (549.2371826171875, 350.0397033691406), (551.2635498046875, 346.70001220703125), (551.2344360351562, 344.06298828125), (552.8256225585938, 341.54632568359375), (554.0899047851562, 337.87652587890625), (554.230224609375, 335.34283447265625), (555.5545654296875, 334.41265869140625), (556.2274780273438, 330.3359375), (557.1261596679688, 328.8431701660156), (558.4266967773438, 323.14056396484375), (559.72265625, 317.7517395019531), (560.9404296875, 302.7269287109375), (561.2205200195312, 293.27557373046875), (562.2191772460938, 276.3054504394531), (562.2191772460938, 265.7923278808594), (561.2205200195312, 256.4939880371094), (560.221923828125, 239.33404541015625), (558.824462890625, 230.02427673339844), (557.7791137695312, 215.70858764648438), (557.22607421875, 205.49606323242188), (557.22607421875, 191.34869384765625), (557.22607421875, 183.5457763671875), (557.22607421875, 176.67630004882812), (557.22607421875, 172.1063232421875), (557.22607421875, 162.916259765625), (557.22607421875, 159.80523681640625), (558.5291748046875, 155.65858459472656), (559.9453735351562, 148.2689208984375), (561.1312866210938, 143.2454376220703), (562.2191772460938, 130.81228637695312), (563.717041015625, 124.40280151367188), (563.2177734375, 119.4067153930664), (564.9270629882812, 113.35293579101562), (565.2149658203125, 107.77945709228516), (566.3935546875, 102.01953125), (567.3731689453125, 95.95804595947266), (568.7078857421875, 89.44121551513672), (570.721435546875, 78.63916015625), (572.8021850585938, 69.75576782226562), (575.2833862304688, 60.6643180847168), (579.349609375, 54.03403091430664)])
        post_action(1.221174)
        perform_swipe_event([(513.287109375, 157.8766632080078), (507.2965087890625, 192.84494018554688), (501.3191833496094, 234.58473205566406), (490.04766845703125, 304.9355163574219), (483.5185852050781, 419.4402160644531), (481.3329162597656, 453.6257019042969), (481.33148193359375, 474.3990783691406), (479.8335876464844, 511.60028076171875), (479.5323791503906, 532.21142578125), (479.3342590332031, 553.7456665039062), (477.0962829589844, 587.1575317382812), (474.7215576171875, 611.6666259765625), (472.6908264160156, 635.030517578125), (471.4939880371094, 653.8104248046875), (465.5434265136719, 709.355712890625), (460.3606262207031, 736.4246826171875), (450.77374267578125, 797.298095703125), (442.0343322753906, 847.1848754882812), (434.0356140136719, 897.5528564453125), (429.494140625, 926.3699340820312), (425.6018981933594, 964.5095825195312), (422.413330078125, 1012.4844970703125), (422.413330078125, 1031.447998046875), (422.413330078125, 1057.881591796875), (423.41192626953125, 1070.5943603515625), (424.14190673828125, 1095.18505859375), (424.4105529785156, 1115.631591796875), (423.1679382324219, 1120.346435546875), (422.413330078125, 1130.5809326171875), (423.4638977050781, 1138.266845703125)])
        post_action(0.185138)
        perform_swipe_event([(506.29681396484375, 383.7002258300781), (495.3890380859375, 429.1257629394531), (486.8566589355469, 478.07415771484375), (483.77288818359375, 496.943115234375), (475.8172302246094, 555.0784301757812), (465.5555114746094, 617.3052368164062), (460.0484313964844, 675.6927490234375), (454.863525390625, 756.9888305664062), (453.3703308105469, 832.5448608398438), (453.3703308105469, 909.7892456054688), (451.5985107421875, 972.3715209960938), (446.9526672363281, 1024.6121826171875), (442.38555908203125, 1056.674560546875), (441.5804748535156, 1066.4228515625), (441.386962890625, 1081.702880859375), (441.386962890625, 1085.3814697265625), (441.386962890625, 1089.1490478515625)])
        post_action(0.328231)
        perform_swipe_event([(541.248291015625, 336.7369384765625), (525.337158203125, 378.7099609375), (511.2986755371094, 426.5120544433594), (489.814697265625, 522.7799072265625), (470.8207092285156, 620.1424560546875), (461.620361328125, 683.6201171875), (459.6156005859375, 713.1416015625), (454.6413269042969, 774.0304565429688), (453.4514465332031, 808.013427734375), (453.6144104003906, 869.1867065429688), (454.3689270019531, 920.281005859375), (456.44097900390625, 967.6673583984375), (456.3661804199219, 988.2437133789062), (454.86822509765625, 1030.1951904296875), (454.592529296875, 1049.597412109375), (454.3689270019531, 1062.8995361328125), (450.599609375, 1089.6343994140625), (449.8830871582031, 1099.5697021484375), (450.3744812011719, 1106.4873046875), (449.3758850097656, 1121.4315185546875), (449.3758850097656, 1126.3389892578125), (449.3758850097656, 1132.115478515625), (449.3758850097656, 1134.4332275390625), (449.3758850097656, 1141.6383056640625), (449.3758850097656, 1145.0316162109375), (449.3758850097656, 1152.1085205078125), (449.3758850097656, 1154.8446044921875), (449.3758850097656, 1159.408203125), (449.3758850097656, 1162.072265625), (449.3758850097656, 1163.7452392578125), (449.3758850097656, 1165.0631103515625), (449.3758850097656, 1166.0889892578125)])
        post_action(0.831122)
        perform_swipe_event([(468.3495178222656, 1056.1748046875), (465.9465026855469, 1026.11865234375), (471.49188232421875, 943.5823364257812), (489.8399353027344, 841.8450927734375), (515.2843017578125, 737.423828125), (535.5718994140625, 660.0634765625), (541.0281982421875, 634.995849609375), (546.7406616210938, 609.024169921875), (551.921630859375, 590.0980224609375), (557.1439208984375, 571.3417358398438), (562.8488159179688, 544.791259765625), (567.3930053710938, 531.3148193359375), (573.0902709960938, 511.0559387207031), (576.8591918945312, 502.0668029785156), (581.19287109375, 487.6190185546875), (582.9252319335938, 480.21575927734375), (588.8391723632812, 463.1051940917969), (590.5595092773438, 456.3144226074219), (595.499755859375, 438.6767272949219), (598.6277465820312, 427.64898681640625), (608.64990234375, 390.08807373046875), (613.1315307617188, 374.7662353515625), (619.7269287109375, 346.3788146972656), (622.2044067382812, 334.3960266113281), (624.4633178710938, 318.767333984375), (625.7059326171875, 312.4560241699219), (627.9428100585938, 302.6888427734375), (629.2597045898438, 297.2330017089844), (631.3569946289062, 289.8382568359375), (637.4146118164062, 276.6590270996094), (641.5345458984375, 271.5059509277344), (646.5655517578125, 266.32843017578125), (654.5908813476562, 254.30133056640625), (656.342529296875, 247.04478454589844), (659.2041015625, 235.33746337890625), (661.5308227539062, 227.47337341308594), (661.7678833007812, 223.7642364501953), (662.0804443359375, 218.86676025390625), (663.375244140625, 216.23800659179688), (663.0791015625, 215.8313751220703), (663.0791015625, 213.84622192382812), (663.0791015625, 212.83790588378906), (664.0776977539062, 210.33566284179688), (664.0776977539062, 209.21243286132812), (664.0776977539062, 206.69432067871094), (665.3653564453125, 205.54995727539062), (665.0762939453125, 204.0101318359375), (665.0762939453125, 202.98289489746094), (665.0762939453125, 200.68772888183594), (665.0762939453125, 199.8438720703125), (667.0735473632812, 199.17001342773438), (667.0735473632812, 197.84542846679688), (667.0735473632812, 196.84620666503906)])
        post_action(1.706311)
        perform_click_event("Tap", 58.918171, 135.893829, 0.111000, "Activity")
        post_action(0.000000)

    except Exception as e:
        print(e)
        traceback_str = ''.join(traceback.format_tb(e.__traceback__))
        print(traceback_str)
    clean_up()
    